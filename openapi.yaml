openapi: 3.1.0
info:
  title: RedHat Funding Emailer API
  version: 1.1.2
servers:
  - url: https://rh-emailer.onrender.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    PrepareResponse:
      type: object
      properties:
        prepare_id: { type: string }
        count: { type: integer }
        preview:
          type: array
          items:
            type: object
            properties:
              lead: { type: object }
              email_html: { type: string }
        metrics: { type: object }
      required: [prepare_id, count, preview, metrics]

    SendRequest:
      type: object
      properties:
        prepare_id: { type: string }
        dry_run: { type: boolean, default: true }
        tone:
          type: string
          nullable: true
      required: [prepare_id]

    SendResponse:
      type: object
      properties:
        job_id: { type: string }
        queued: { type: boolean }
        summary: { type: object }
      required: [job_id, queued, summary]

    StatusResponse:
      type: object
      properties:
        job_id: { type: string }
        status: { type: string }
        payload: { type: object, nullable: true }
        result: { type: object, nullable: true }
      required: [job_id, status]

    UnsubscribeRequest:
      type: object
      properties:
        email: { type: string, format: email }
      required: [email]

    SuppressionResponse:
      type: object
      properties:
        email: { type: string }
        suppressed: { type: boolean }
      required: [email, suppressed]

    DirectSendRequest:
      type: object
      properties:
        to_email: { type: string, format: email }
        subject: { type: string, default: Funding Offer }
        body_html: { type: string }
        tone:
          type: string
          enum: [conservative, assertive]
          default: conservative
        dry_run: { type: boolean, default: true }
      required: [to_email, body_html]

    DirectSendResponse:
      type: object
      properties:
        sent: { type: boolean }
        id: { type: string }
        reason: { type: string, nullable: true }
      required: [sent, id]

security:
  - bearerAuth: []

paths:
  /health:
    get:
      operationId: health
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  version: { type: string }

  /prepare:
    post:
      operationId: prepareBatch
      summary: Parse uploaded files and return normalized previews
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [files]
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                tone:
                  type: string
                  enum: [conservative, assertive]
                  default: conservative
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/PrepareResponse' }

  /send:
    post:
      operationId: sendBatch
      summary: Queue email send job
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SendRequest' }
      responses:
        "200":
          description: Job queued
          content:
            application/json:
              schema: { $ref: '#/components/schemas/SendResponse' }

  /direct_send:
    post:
      operationId: direct_send_post
      summary: Send a single email immediately
      security:
        - bearerAuth: []
      parameters:
        - name: payload
          in: query
          required: false
          description: "LEGACY: URL-encoded JSON for DirectSendRequest (prefer JSON body)."
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema: { $ref: '#/components/schemas/DirectSendRequest' }
      responses:
        "200":
          description: Sent (or dry-accepted)
          content:
            application/json:
              schema: { $ref: '#/components/schemas/DirectSendResponse' }

  /status/{job_id}:
    get:
      operationId: checkStatus
      summary: Check job status
      security:
        - bearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/StatusResponse' }

  /unsubscribe:
    post:
      operationId: unsubscribeEmail
      summary: Add email to suppression list
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/UnsubscribeRequest' }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/SuppressionResponse' }
